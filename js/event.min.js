let updateYear = 9; for (index = 2023; index < new Date().getFullYear(); index++)updateYear += 1; let questionId = "", targetIdValue = "", aneeId = "", menuId = "", paragraph = document.querySelector(".paragraph"), section = document.querySelector("section"), targetTypeId = "", tousLesTargets = []; function anne(e) { return aneeId = e } let currentYear = new Date().getFullYear(); function menu(e) { return menuId = e } function getQuestionId(e) { return questionId = e } function getTergetValue(e) { return targetIdValue = e } function getTargetTypeValue(e) { return targetTypeId = e } function loadTarget() { var e = $("#targettype_id").val(); $.ajax({ url: "data.php", method: "POST", data: "targetId=" + e }).done(function (e) { e = JSON.parse(e), $("#target_id").empty(), e.forEach(function (e) { $("#target_id").append($("<option>", { value: e.code_cible, text: e.lib_cible_app })) }), getTergetValue(targetIdValue = $("#target_id").val()), 0 == $("#first_div:visible").length && requestresponse(questionId, targetIdValue), 1 == $("#first_div:visible").length && 1 == $("#third_div:visible").length && resquestresponseMenu(menuId, targetIdValue, aneeId) }) } function requestresponse(e, a) { $.ajax({ url: "data.php", method: "GET", data: { questionId: e, targetIdValue: a } }).done(function (e) { e = JSON.parse(e), paragraph.innerHTML = "", $("#inevolution").hasClass("active") && ($(".barres").click(function () { $(".line").hasClass("actual") && $(".line").removeClass("actual"), $(".table").hasClass("actual") && $(".table").removeClass("actual"), $(".pie").hasClass("actual") && $(".pie").removeClass("actual"), $(".lineList").hasClass("picto") && $(".lineList").removeClass("picto"), $(".tableList").hasClass("picto") && $(".tableList").removeClass("picto"), $(".pieList").hasClass("picto") && $(".pieList").removeClass("picto"), $(".barresList").addClass("picto"), $(".barres").addClass("actual"), displayBar(e) }), $(".line").click(function () { $(".barres").hasClass("actual") && $(".barres").removeClass("actual"), $(".table").hasClass("actual") && $(".table").removeClass("actual"), $(".pie").hasClass("actual") && $(".pie").removeClass("actual"), $(".barresList").hasClass("picto") && $(".barresList").removeClass("picto"), $(".tableList").hasClass("picto") && $(".tableList").removeClass("picto"), $(".pieList").hasClass("picto") && $(".pieList").removeClass("picto"), $(".lineList").addClass("picto"), $(".line").addClass("actual"), displayLine(e) }), $(".table").click(function () { $(".line").hasClass("actual") && $(".line").removeClass("actual"), $(".barres").hasClass("actual") && $(".barres").removeClass("actual"), $(".pie").hasClass("actual") && $(".pie").removeClass("actual"), $(".barresList").hasClass("picto") && $(".barresList").removeClass("picto"), $(".lineList").hasClass("picto") && $(".lineList").removeClass("picto"), $(".pieList").hasClass("picto") && $(".pieList").removeClass("picto"), $(".tableList").addClass("picto"), $(".table").addClass("actual"), displayTable(e) }), $(".pie").click(function () { $(".line").hasClass("actual") && $(".line").removeClass("actual"), $(".barres").hasClass("actual") && $(".barres").removeClass("actual"), $(".table").hasClass("actual") && $(".table").removeClass("actual"), $(".barresList").hasClass("picto") && $(".barresList").removeClass("picto"), $(".lineList").hasClass("picto") && $(".lineList").removeClass("picto"), $(".tableList").hasClass("picto") && $(".tableList").removeClass("picto"), $(".pieList").addClass("picto"), $(".pie").addClass("actual"), displayPie(e) })), $(".barres").hasClass("actual") && displayBar(e), $(".line").hasClass("actual") && displayLine(e), $(".table").hasClass("actual") && displayTable(e), $(".pie").hasClass("actual") && displayPie(e) }) } function resquestresponseMenu(e, a, t) { $.ajax({ url: "data.php", method: "GET", data: { menuId: e, targetIdValue: a, aneeId: t } }).done(function (e) { e = JSON.parse(e), null != $('*[id^="chart"]').val() && $('*[id^="chart"]').remove(), null != $('*[class^="graph"]').val() && $('*[class^="graph"]').remove(), e.forEach(function (e, a) { anees = (anees = e.code_periode.split("|")).map(function (e) { return parseInt(anees) + updateYear }), reponses = e.reponses.split("|"), datas = e.resul.split("|"), questionApp = e.lib_questions_app.split("|"), average = datas.filter(function (e) { return e > 1 }), data = (data = datas.filter(function (e) { return e < 1 })).map(function (e) { return e < 1 ? Math.round(100 * e) : 1 * e }), (div = document.createElement("div")).classList.add("graph"), (question = document.createElement("p")).classList.add("paragraph"), question.innerHTML = questionApp, div.appendChild(question), canvas = document.createElement("canvas"), div.appendChild(canvas), chartId = "chart" + a, canvas.id = chartId, (textAverage = document.createElement("p")).classList.add("average"), average > 1 ? textAverage.innerHTML = "Average " + average : textAverage.innerHTML = "", div.append(textAverage), (content = document.querySelector("section")).appendChild(div), context = document.getElementById(chartId); let t = { type: "bar", data: { labels: anees, datasets: [] }, options: { indexAxis: "y", responsive: !0, maintainAspectRatio: !1, scales: { x: { stacked: !0 }, y: { stacked: !0 } } } }; data.forEach((e, a) => { t.data.datasets.push({ data: [e], label: [reponses[a]] }) }), canvas.parentNode.style.height = "100px", new Chart(context, t) }) }) } function requestresponseByTarget(e, a, t) { $.ajax({ url: "data.php", method: "GET", data: { questionId: e, aneeId: a, targetTypeId: t } }).done(function (e) { e = JSON.parse(e), $("#bytarget").hasClass("active") && ($(".barres").click(function () { $(".line").hasClass("actual") && $(".line").removeClass("actual"), $(".table").hasClass("actual") && $(".table").removeClass("actual"), $(".pie").hasClass("actual") && $(".pie").removeClass("actual"), $(".lineList").hasClass("picto") && $(".lineList").removeClass("picto"), $(".tableList").hasClass("picto") && $(".tableList").removeClass("picto"), $(".pieList").hasClass("picto") && $(".pieList").removeClass("picto"), $(".barresList").addClass("picto"), $(".barres").addClass("actual"), displayBar(e) }), $(".line").click(function () { $(".barres").hasClass("actual") && $(".barres").removeClass("actual"), $(".table").hasClass("actual") && $(".table").removeClass("actual"), $(".pie").hasClass("actual") && $(".pie").removeClass("actual"), $(".barresList").hasClass("picto") && $(".barresList").removeClass("picto"), $(".tableList").hasClass("picto") && $(".tableList").removeClass("picto"), $(".pieList").hasClass("picto") && $(".pieList").removeClass("picto"), $(".lineList").addClass("picto"), $(".line").addClass("actual"), displayLine(e) }), $(".table").click(function () { $(".line").hasClass("actual") && $(".line").removeClass("actual"), $(".barres").hasClass("actual") && $(".barres").removeClass("actual"), $(".pie").hasClass("actual") && $(".pie").removeClass("actual"), $(".barresList").hasClass("picto") && $(".barresList").removeClass("picto"), $(".lineList").hasClass("picto") && $(".lineList").removeClass("picto"), $(".pieList").hasClass("picto") && $(".pieList").removeClass("picto"), $(".tableList").addClass("picto"), $(".table").addClass("actual"), displayTable(e) }), $(".pie").click(function () { $(".line").hasClass("actual") && $(".line").removeClass("actual"), $(".barres").hasClass("actual") && $(".barres").removeClass("actual"), $(".table").hasClass("actual") && $(".table").removeClass("actual"), $(".barresList").hasClass("picto") && $(".barresList").removeClass("picto"), $(".lineList").hasClass("picto") && $(".lineList").removeClass("picto"), $(".tableList").hasClass("picto") && $(".tableList").removeClass("picto"), $(".pieList").addClass("picto"), $(".pie").addClass("actual"), displayPie(e) })), $(".barres").hasClass("actual") && displayBar(e), $(".line").hasClass("actual") && displayLine(e), $(".table").hasClass("actual") && displayTable(e), $(".pie").hasClass("actual") && displayPie(e) }) } function displayTable(e) { let a = [], t = [], s = [], l = []; $(".colorsDropdown").hide(), null != $('*[id^="chart"]').val() && $('*[id^="chart"]').remove(), null != $('*[class^="graph"]').val() && $('*[class^="graph"]').remove(), e.forEach(function (e, r) { anees = (anees = e.code_periode.split("|")).map(function (e) { return parseInt(anees) + updateYear }), s.push(anees), target = e.lib_cible_app, l.push(target), "Average" == (reponses = e.reponses.split("|"))[reponses.length - 1] ? reponses.pop() : reponses, datas = e.resul.split("|"), questionApp = e.lib_questions_app.split("|"), paragraph.innerHTML = questionApp, average = datas.filter(function (e) { return e > 1 }), t.push(average), data = (data = datas.filter(function (e) { return e < 1 })).map(function (e) { return e < 1 ? Math.round(100 * e) : 1 * e }), a.push(data) }), null != $("table").length && $("table").remove(), tableCreate(s, reponses, a, t, l) } function tableCreate(e, a, t, s, l) { let r = []; if (t.length > 1) for (let n = 0; n <= t.length; n++) { let o = []; t.forEach(e => { o.push(e[n]) }), r.push(o) } else r = t; $(".table-responsive").remove(); let p = document.createElement("div"); if (p.classList.add("table-responsive"), $table = $("<table>", { border: "3", width: "90%", class: "mx-auto table table-hover table-bordered text-center " }), $thead = $("<thead>", { class: "bg-light mt-2 mb-2" }), $tbody = $("<tbody>"), $thead.append($("<th>", { scope: "col", text: "" })), $("#inevolution").hasClass("active")) for (headerNum = 0; headerNum < e.length; headerNum++)$thead.append($("<th>", { scope: "col", text: e[headerNum] })); if ($("#bytarget").hasClass("active")) for (headerNum = 0; headerNum < l.length; headerNum++)$thead.append($("<th>", { scope: "col", text: l[headerNum] })); if (t.length > 1) { for (rowCount = 0; rowCount < r.length; rowCount++)if (checkValueInArray = r[rowCount].every(e => void 0 != e)) { for ((newTr = $("<tr>")).append($("<td>", { text: a[rowCount] })), rowColumnCount = 0; rowColumnCount < r[rowCount].length; rowColumnCount++)newTr.append($("<td>", { text: r[rowCount][rowColumnCount] })); $tbody.append(newTr) } } else { for (rowColumnCount = 0; rowColumnCount < r[0].length; rowColumnCount++)(newTr = $("<tr>")).append($("<td>", { text: a[rowColumnCount] })), newTr.append($("<td>", { text: r[0][rowColumnCount] })), $tbody.append(newTr); $tbody.append(newTr) } let c = ""; for (i = 0; i < s.length; i++)c = 0 !== s[i].length; if (c) { for ((newTrAvg = $("<tr>")).append($("<td>", { text: "Average" })), index = 0; index < s.length; index++)newTrAvg.append($("<td>", { text: s[index] })); $tbody.append(newTrAvg) } $table.append($thead), $table.append($tbody), document.querySelector("section").appendChild(p), $table.appendTo(".table-responsive") } function displayLine(e) { let a = [], t = [], s = [], l = [], r = 0; null != $('*[id^="chart"]').val() && $('*[id^="chart"]').remove(), null != $('*[class^="graph"]').val() && $('*[class^="graph"]').remove(), null != $("table").length && $("table").remove(), e.forEach(function (e, r) { anees = (anees = e.code_periode.split("|")).map(function (e) { return parseInt(anees) + updateYear }), s.push(anees), target = e.lib_cible_app, l.push(target), "Average" == (reponses = e.reponses.split("|"))[reponses.length - 1] ? reponses.pop() : reponses, datas = e.resul.split("|"), questionApp = e.lib_questions_app.split("|"), paragraph.innerHTML = questionApp, average = datas.filter(function (e) { return e > 1 }), t.push(average), data = (data = datas.filter(function (e) { return e < 1 })).map(function (e) { return e < 1 ? Math.round(100 * e) : 1 * e }), a.push(data) }), (div = document.createElement("div")).classList.add("graph"), canvas = document.createElement("canvas"), chartId = "chart" + r, canvas.id = chartId, div.appendChild(canvas), (content = document.querySelector("section")).appendChild(div), context = document.getElementById(chartId), r++; let n = []; if (a.length > 1) for (let o = 0; o <= a.length; o++) { let p = []; a.forEach(e => { p.push(e[o]) }), n.push(p) } else for (let c = 0; c < a[0].length; c++) { let d = []; d.push(a[0][c]), n.push(d) } canvas.parentNode.style.height = "350px"; let u = new Chart(context, { type: "line", data: { labels: s, datasets: [] }, options: { responsive: !0, maintainAspectRatio: !0, scales: { x: { offset: !0 } }, elements: { line: { tension: .4 } }, plugins: { datalabels: { align: "top", color: "#0000FF", labels: { title: { font: { weight: "bold", size: 9 } } }, formatter: (e, a) => "Average" === a.dataset.label && "bar" == a.dataset.type ? "Avg " + e : "" } } }, plugins: [ChartDataLabels] }); for ($("#bytarget").hasClass("active") && (u.data.labels = l, u.update()), displayColorPalet(reponses), generateColorInput(), $(".colorSelect").on("change", function () { pushColorOnChange(u), u.update() }), i = 0; i < n.length; i++)(checkValueInArray = n[i].every(e => void 0 != e)) && u.data.datasets.push({ label: reponses[i], data: n[i], borderWidth: 2, pointRadius: 5 }); let h = ""; for (i = 0; i < t.length; i++)h = 0 !== t[i].length; h && u.data.datasets.push({ type: "bar", label: "Average", data: t, borderWidth: 2 }), u.update() } function displayBar(e) { null != $('*[id^="chart"]').val() && $('*[id^="chart"]').remove(), null != $('*[class^="graph"]').val() && $('*[class^="graph"]').remove(), null != $("table").length && $("table").remove(), "Average" == (reponses = e[0].reponses.split("|"))[reponses.length - 1] ? reponses.pop() : reponses, displayColorPalet(reponses), e.forEach(function (e, a) { anees = (anees = e.code_periode.split("|")).map(function (e) { return parseInt(anees) + updateYear }), "Average" == (reponses = e.reponses.split("|"))[reponses.length - 1] ? reponses.pop() : reponses, datas = e.resul.split("|"), questionApp = e.lib_questions_app.split("|"), target = e.lib_cible_app, paragraph.innerHTML = questionApp, average = datas.filter(function (e) { return e > 1 }), data = (data = datas.filter(function (e) { return e < 1 })).map(function (e) { return e < 1 ? Math.round(100 * e) : 1 * e }), (div = document.createElement("div")).classList.add("graph"), canvas = document.createElement("canvas"), chartId = "chart" + a, canvas.id = chartId, div.appendChild(canvas), (textAverage = document.createElement("p")).classList.add("average"), average > 1 ? textAverage.innerHTML = "Average " + average : textAverage.innerHTML = "", div.append(textAverage), (content = document.querySelector("section")).appendChild(div), context = document.getElementById(chartId); let t = { type: "bar", data: { labels: anees, datasets: [] }, options: { indexAxis: "y", responsive: !0, maintainAspectRatio: !1, scales: { x: { stacked: !0 }, y: { stacked: !0 } }, plugins: { legend: { position: "top" }, title: { display: !0, text: target } } } }; data.forEach((e, a) => { t.data.datasets.push({ data: [e], label: [reponses[a]] }) }), generateColorInput(); let s = new Chart(context, t); $(".colorSelect").on("change", function () { pushColorOnChange(s), s.update() }) }) } function displayPie(e) { null != $('*[id^="chart"]').val() && $('*[id^="chart"]').remove(), null != $('*[class^="graph"]').val() && $('*[class^="graph"]').remove(), null != $("table").length && $("table").remove(), "Average" == (reponses = e[0].reponses.split("|"))[reponses.length - 1] ? reponses.pop() : reponses, displayColorPalet(reponses), e.forEach(function (e, a) { anees = (anees = e.code_periode.split("|")).map(function (e) { return parseInt(anees) + updateYear }), reponses = e.reponses.split("|"), target = e.lib_cible_app, "Average" == reponses[reponses.length - 1] ? reponses.pop() : reponses, datas = e.resul.split("|"), questionApp = e.lib_questions_app.split("|"), paragraph.innerHTML = questionApp, average = datas.filter(function (e) { return e > 1 }), data = (data = datas.filter(function (e) { return e < 1 })).map(function (e) { return e < 1 ? Math.round(100 * e) : 1 * e }), (div = document.createElement("div")).classList.add("graph"), canvas = document.createElement("canvas"), chartId = "chart" + a, canvas.id = chartId, div.appendChild(canvas), (textAverage = document.createElement("p")).classList.add("averagePie"), average > 1 ? textAverage.innerHTML = "Average " + average : textAverage.innerHTML = "", div.append(textAverage), (content = document.querySelector("section")).appendChild(div), context = document.getElementById(chartId); var t = []; reponses.forEach(function (e) { t.push(e) }); let s = { type: "doughnut", data: { labels: t, datasets: [{ label: anees, data: data, hoverOffset: 4 }] }, options: { responsive: !1, plugins: { legend: { display: !0 }, title: { display: !0, text: target ? anees + " " + target : anees }, datalabels: { align: "center", color: "#fff", legend: { position: "top" } } } }, plugins: [ChartDataLabels] }; canvas.parentNode.style.height = "400px", canvas.parentNode.style.display = "inline-block", generateColorInput(); let l = new Chart(context, s); l.update(), $(".colorSelect").on("change", function () { colors = [], $(".colorSelect").each((e, a) => { colors.push(a.value) }), l.data.datasets.forEach((e, a) => { e.backgroundColor = colors }), l.update() }) }) } function displayColorPalet(e) { $(".colorsDropdown").show(), $(".colorSelector").remove(); let a = ["#36a2eb", "#ff6384", "#ff9f40", "#ffcd56", "#4bc0c0", "#9966ff", "#c9cbcf"]; for (i = 0; i < e.length; i++) { let t = document.getElementById("colorList"), s = document.createElement("div"); s.classList.add("col-3", "colorSelector", "d-inline"), s.style.display = "none", t.appendChild(s); let l = document.createElement("label"); l.classList.add("form-label", "colorLabel"), l.setAttribute("for", "colorInput" + (i + 1)); let r = document.createElement("input"); r.type = "color", r.classList.add("colorSelect", "form-control", "form-control-color"), r.setAttribute("id", "colorInput" + (i + 1)), r.value = a[i], s.append(l, r) } } function generateColorInput() { colorSelectors = document.querySelectorAll(".colorSelector"), $(".colorSelector").each((e, a) => { e < reponses.length ? a.style.display = "block" : a.style.display = "none" }), $(".colorLabel").each((e, a) => { a.innerHTML = reponses[e] }) } function pushColorOnChange(e) { colors = [], $(".colorSelect").each((e, a) => { let t = "rgba(" + parseInt(a.value.slice(-6, -4), 16) + "," + parseInt(a.value.slice(-4, -2), 16) + "," + parseInt(a.value.slice(-2), 16) + ",0.7)"; colors.push(t) }), e.data.datasets.forEach((e, a) => { e.backgroundColor = colors[a], e.borderColor = colors[a] }), e.update() } function mobile_openNav() { document.getElementById("mobile_nav").style.width = "100%" } function mobile_closeNav() { document.getElementById("mobile_nav").style.width = "0" } $(document).ready(function () { document.querySelector("#top_menu").style.display = "none", loadTarget(), $("#targettype_id").on("change", function () { loadTarget(), $("#bytarget").hasClass("active") && (getTargetTypeValue(targetTypeId = $("#targettype_id").val()), requestresponseByTarget(questionId, aneeId, targetTypeId)) }), $(".question").click(function () { section.innerHTML = "", $("#bytarget").hasClass("active") ? document.querySelector(".form-floating").style.display = "block" : document.querySelector(".form-floating").style.display = "none", document.querySelector("#displayTypeGraph").style.display = "block", document.querySelector("#top_menu").style.display = "flex", getQuestionId(questionId = this.getAttribute("data-index")), getTergetValue(targetIdValue = $("#target_id").find(":selected").val()), anne(aneeId = $("#period_id").val()), $("#bytarget").hasClass("active") && requestresponseByTarget(questionId, aneeId, targetTypeId), $("#inevolution").hasClass("active") && requestresponse(questionId, targetIdValue) }), $("#target_id").change(function () { getTergetValue(targetIdValue = $("#target_id").val()), 0 == $("#first_div:visible").length ? requestresponse(questionId, targetIdValue) : resquestresponseMenu(menuId, targetIdValue, aneeId) }), $("#period_id").change(function () { anne(aneeId = $("#period_id").val()), $("#bytarget").hasClass("active") ? requestresponseByTarget(questionId, aneeId, targetTypeId) : resquestresponseMenu(menuId, targetIdValue, aneeId) }), $(".menu").click(function () { paragraph.innerHTML = "", section.innerHTML = "", document.querySelector(".form-floating").style.display = "block", document.querySelector("#displayTypeGraph").style.display = "none", document.querySelector("#top_menu").style.display = "none", document.querySelector("#third_div").style.display = "block", menu(menuId = this.getAttribute("data-index")), $(".colorsDropdown").hide(), targetIdValue = $("#target_id").find(":selected").val(), anne(aneeId = $("#period_id").val()), $("#bytarget").hasClass("active") && ($("#bytarget").removeClass("active"), $("#inevolution").addClass("active")), resquestresponseMenu(menuId, targetIdValue, aneeId) }), $(".question").click(function () { $(".question").hasClass("activequestion") && $(".question").removeClass("activequestion"), $(this).addClass("activequestion") }), $(".menu").click(function () { $(".collapse").hasClass("show") && $(".collapse").removeClass("show"), $(".menu").hasClass("activemenu") ? ($(".menu").removeClass("activemenu"), $(this).addClass("activemenu"), $(".collapse").next().removeClass("show")) : ($(this).addClass("activemenu"), $(".collapse").next().addClass("show")) }), $(".top-menu").click(function () { $(".top-menu").hasClass("active") && $(".top-menu").removeClass("active"), $(this).addClass("active") }) }), $("#bytarget").click(function () { document.querySelector(".form-floating").style.display = "block", document.querySelector("#third_div").style.display = "none", getTargetTypeValue(targetTypeId = $("#targettype_id").val()), anne(aneeId = $("#period_id").val()), requestresponseByTarget(questionId, aneeId, targetTypeId) }), $("#inevolution").click(function () { document.querySelector(".form-floating").style.display = "none", document.querySelector("#third_div").style.display = "block", requestresponse(questionId, targetIdValue) }), $("a").on("click", function (e) { if ("" !== this.hash) { e.preventDefault(); var a = this.hash; $("html,body").animate({ scrollTop: $(a).offset().top }, 800, function () { window.location.hash = a }) } }), $(".js--services-section").waypoint(function (e) { "down" == e ? ($(".stiky-nav").addClass("stiky"), document.getElementById("my_stiky").style.display = "block") : ($(".stiky-nav").removeClass("stiky"), document.getElementById("my_stiky").style.display = "none") });